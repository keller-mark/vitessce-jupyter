from pathlib import Path

# Directory / file constants
SRC_DIR = Path("src")
DATA_DIR = Path("data")
RAW_DIR = DATA_DIR / "raw"
PROCESSED_DIR = DATA_DIR / "processed"

# URL constants
LOOM_URL = 'http://linnarssonlab.org/osmFISH/osmFISH_SScortex_mouse_all_cells.loom'

BLOBS_URL = 'https://storage.googleapis.com/linnarsson-lab-www-blobs/blobs'
CELL_SEGMENTATION_PKL_URL = f'{BLOBS_URL}/osmFISH/data/polyT_seg.pkl'
MOLECULES_HDF5_URL = f'f{BLOBS_URL}/osmFISH/data/mRNA_coords_raw_counting.hdf5'

# note: the name is actually "Linnarsson", with two "S"s, but this is the URL.
IMAGES_HDF5_URL = f'http://pklab.med.harvard.edu/viktor/data/spatial/linnarson/Nuclei_polyT.int16.sf.hdf5'


# Rules
rule all:
    input:
        (PROCESSED_DIR / "linnarsson.cells.json"),
        (PROCESSED_DIR / "linnarsson.cell-sets.json"),
        (PROCESSED_DIR / "linnarsson.clusters.json"),
        (PROCESSED_DIR / "linnarsson.genes.json"),
        (PROCESSED_DIR / "linnarsson.neighborhoods.json"),
        (PROCESSED_DIR / "linnarsson.factors.json"),
        #(PROCESSED_DIR / "linnarsson.molecules.json"),
        #(PROCESSED_DIR / "linnarsson.images.zarr")

rule convert_loom_to_cells_json:
    input:
        loom=(RAW_DIR / "osmFISH_SScortex_mouse_all_cells.loom"),
        pkl=(RAW_DIR / "polyT_seg.pkl")
    output:
        cells=(PROCESSED_DIR / "linnarsson.cells.json"),
        cell_sets=(PROCESSED_DIR / "linnarsson.cell-sets.json"),
        exp_matrix=(PROCESSED_DIR / "linnarsson.clusters.json"),
        genes=(PROCESSED_DIR / "linnarsson.genes.json"),
        neighborhoods=(PROCESSED_DIR / "linnarsson.neighborhoods.json"),
        factors=(PROCESSED_DIR / "linnarsson.factors.json"),
    params:
        script=(SRC_DIR / "convert_loom_to_cells_json.py")
    shell:
        '''
        python {params.script} \
            -il {input.loom} \
            -ip {input.pkl} \
            -oc {output.cells} \
            -ocs {output.cell_sets} \
            -oem {output.exp_matrix} \
            -og {output.genes} \
            -on {output.neighborhoods} \
            -of {output.factors}
        '''

rule convert_hdf5_to_molecules_json:
    input:
        hdf5=(RAW_DIR / "mRNA_coords_raw_counting.hdf5")
    output:
        molecules=(PROCESSED_DIR / "linnarsson.molecules.json")
    params:
        script=(SRC_DIR / "convert_hdf5_to_molecules_json.py")
    shell:
        '''
        python {params.script} \
            -ih {input.hdf5} \
            -om {output.molecules}
        '''

rule convert_hdf5_to_raster_zarr:
    input:
        hdf5=(RAW_DIR / "Nuclei_polyT.int16.sf.hdf5")
    output:
        raster_zarr=(PROCESSED_DIR / "linnarsson.images.zarr")
    params:
        script=(SRC_DIR / "convert_hdf5_to_raster_zarr.py")
    shell:
        '''
        python {params.script} \
            -ih {input.hdf5} \
            -orz {output.raster_zarr}
        '''

# Download raw data files.
rule download_cells_loom:
    output:
        (RAW_DIR / "osmFISH_SScortex_mouse_all_cells.loom")
    params:
        file_url=LOOM_URL
    shell:
        '''
        curl -L -o {output} {params.file_url}
        '''

rule download_cell_segmentation_pkl:
    output:
        (RAW_DIR / "polyT_seg.pkl")
    params:
        file_url=CELL_SEGMENTATION_PKL_URL
    shell:
        '''
        curl -L -o {output} {params.file_url}
        '''

rule download_molecules_hdf5:
    output:
        (RAW_DIR / "mRNA_coords_raw_counting.hdf5")
    params:
        file_url=MOLECULES_HDF5_URL
    shell:
        '''
        curl -L -o {output} {params.file_url}
        '''

rule download_images_hdf5:
    output:
        (RAW_DIR / "Nuclei_polyT.int16.sf.hdf5")
    params:
        file_url=IMAGES_HDF5_URL
    shell:
        '''
        curl -L -o {output} {params.file_url}
        '''